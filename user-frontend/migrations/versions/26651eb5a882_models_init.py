"""models init

Revision ID: 26651eb5a882
Revises: 
Create Date: 2025-09-10 00:41:49.381327

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '26651eb5a882'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tournaments',
    sa.Column('id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('organizer', sa.String(length=255), nullable=True),
    sa.Column('level', sa.String(length=80), nullable=True),
    sa.Column('institution_type', sa.String(length=80), nullable=True),
    sa.Column('city', sa.String(length=120), nullable=True),
    sa.Column('province', sa.String(length=120), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('display_name', sa.String(length=120), nullable=True),
    sa.Column('city', sa.String(length=120), nullable=True),
    sa.Column('bio', sa.Text(), nullable=True),
    sa.Column('avatar_url', sa.Text(), nullable=True),
    sa.Column('sports', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('is_admin', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)

    op.create_table('password_reset_tokens',
    sa.Column('id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('user_id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('token', sa.String(length=255), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('used', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('password_reset_tokens', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_password_reset_tokens_token'), ['token'], unique=True)

    op.create_table('teams',
    sa.Column('id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('short_name', sa.String(length=50), nullable=True),
    sa.Column('league', sa.String(length=120), nullable=True),
    sa.Column('sport', sa.String(length=80), nullable=True),
    sa.Column('city', sa.String(length=120), nullable=True),
    sa.Column('province', sa.String(length=120), nullable=True),
    sa.Column('owner_id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('teams', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_teams_owner_id'), ['owner_id'], unique=False)

    op.create_table('events',
    sa.Column('id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('slug', sa.String(length=255), nullable=True),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('sport', sa.String(length=80), nullable=True),
    sa.Column('level', sa.String(length=80), nullable=True),
    sa.Column('institution_type', sa.String(length=80), nullable=True),
    sa.Column('host_id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('tournament_id', sa.UUID(as_uuid=False), nullable=True),
    sa.Column('team_a_id', sa.UUID(as_uuid=False), nullable=True),
    sa.Column('team_b_id', sa.UUID(as_uuid=False), nullable=True),
    sa.Column('venue', sa.String(length=255), nullable=True),
    sa.Column('city', sa.String(length=120), nullable=True),
    sa.Column('province', sa.String(length=120), nullable=True),
    sa.Column('starts_at', sa.DateTime(), nullable=False),
    sa.Column('ends_at', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['host_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['team_a_id'], ['teams.id'], ),
    sa.ForeignKeyConstraint(['team_b_id'], ['teams.id'], ),
    sa.ForeignKeyConstraint(['tournament_id'], ['tournaments.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('events', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_events_host_id'), ['host_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_events_slug'), ['slug'], unique=True)
        batch_op.create_index(batch_op.f('ix_events_starts_at'), ['starts_at'], unique=False)

    op.create_table('follow_teams',
    sa.Column('user_id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('team_id', sa.UUID(as_uuid=False), nullable=False),
    sa.ForeignKeyConstraint(['team_id'], ['teams.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'team_id')
    )
    op.create_table('team_members',
    sa.Column('id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('team_id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('user_id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('role', sa.String(length=40), nullable=False),
    sa.Column('joined_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['team_id'], ['teams.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('team_id', 'user_id', name='uq_team_user')
    )
    with op.batch_alter_table('team_members', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_team_members_team_id'), ['team_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_team_members_user_id'), ['user_id'], unique=False)

    op.create_table('tournament_registrations',
    sa.Column('id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('tournament_id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('team_id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['team_id'], ['teams.id'], ),
    sa.ForeignKeyConstraint(['tournament_id'], ['tournaments.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('tournament_id', 'team_id', name='uq_tourn_team')
    )
    with op.batch_alter_table('tournament_registrations', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_tournament_registrations_team_id'), ['team_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_tournament_registrations_tournament_id'), ['tournament_id'], unique=False)

    op.create_table('reminders',
    sa.Column('id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('user_id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('event_id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('method', sa.String(length=20), nullable=False),
    sa.Column('offset_minutes', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'event_id', 'method', name='uq_user_event_method')
    )
    with op.batch_alter_table('reminders', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_reminders_event_id'), ['event_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_reminders_user_id'), ['user_id'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('reminders', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_reminders_user_id'))
        batch_op.drop_index(batch_op.f('ix_reminders_event_id'))

    op.drop_table('reminders')
    with op.batch_alter_table('tournament_registrations', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_tournament_registrations_tournament_id'))
        batch_op.drop_index(batch_op.f('ix_tournament_registrations_team_id'))

    op.drop_table('tournament_registrations')
    with op.batch_alter_table('team_members', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_team_members_user_id'))
        batch_op.drop_index(batch_op.f('ix_team_members_team_id'))

    op.drop_table('team_members')
    op.drop_table('follow_teams')
    with op.batch_alter_table('events', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_events_starts_at'))
        batch_op.drop_index(batch_op.f('ix_events_slug'))
        batch_op.drop_index(batch_op.f('ix_events_host_id'))

    op.drop_table('events')
    with op.batch_alter_table('teams', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_teams_owner_id'))

    op.drop_table('teams')
    with op.batch_alter_table('password_reset_tokens', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_password_reset_tokens_token'))

    op.drop_table('password_reset_tokens')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_email'))

    op.drop_table('users')
    op.drop_table('tournaments')
    # ### end Alembic commands ###
